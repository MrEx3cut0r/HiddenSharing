services:
    nginx:
        image: nginx:alpine
        container_name: nginx_proxy
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/conf.d:/etc/nginx/conf.d
        depends_on:
            - backend
            - frontend
        networks:
            - app-network
        restart: unless-stopped

    redis-cache:
        image: redis:7-alpine
        container_name: redis_cache
        restart: always
        volumes:
            - redis_data:/data
        networks:
            - app-network
        command: redis-server --bind 0.0.0.0

    backend:
        build: ./backend/
        container_name: backend
        volumes:
            - ./backend/:/app
        ports:
            - "8080:8080"
        depends_on:
            - redis-cache
        restart: unless-stopped
        command: python3 main.py
        networks:
            - app-network
    frontend:
        build: ./frontend
        container_name: frontend
        volumes:
            - ./frontend:/app
            - /app/node_modules
        ports:
            - "3000:3000"
        environment:
            NODE_ENV: development
        restart: unless-stopped
        networks:
            - app-network
        command: ["npm", "run", "dev"]
networks:
    app-network:
        driver: bridge
volumes:
    redis_data:
